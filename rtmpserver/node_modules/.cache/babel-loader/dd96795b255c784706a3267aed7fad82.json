{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w_yil\\\\OneDrive\\\\Desktop\\\\twitch\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from \"react\"; // connects a React component to a Redux store.\n\nimport { connect } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n} // helper function for validating formValues\n\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    // only run if the user didn't enter an title\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n}; //wrapping form so you can hook up connect and reduxForm\n\n\nconst formWrapped = reduxForm({\n  form: \"streamCreate\",\n  validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["C:\\Users\\w_yil\\OneDrive\\Desktop\\twitch\\client\\src\\components\\streams\\StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEzCC,QAFyC,GAE9BC,UAAU,IAAI;AACvB,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACD,KAJwC;AAAA;;AAMzCE,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAR;AAID;;AAXwC,C,CAc3C;;;AACA,MAAMC,QAAQ,GAAGH,UAAU,IAAI;AAC7B,QAAMI,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACJ,UAAU,CAACK,KAAhB,EAAuB;AACrB;AACAD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACL,UAAU,CAACM,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CAXD,C,CAaA;;;AACA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC5BC,EAAAA,IAAI,EAAE,cADsB;AAE5BN,EAAAA;AAF4B,CAAD,CAAT,CAGjBN,YAHiB,CAApB;AAKA,eAAeH,OAAO,CACpB,IADoB,EAEpB;AAAEC,EAAAA;AAAF,CAFoB,CAAP,CAGbY,WAHa,CAAf","sourcesContent":["import React from \"react\";\r\n\r\n// connects a React component to a Redux store.\r\nimport { connect } from \"react-redux\";\r\nimport { createStream } from \"../../actions\";\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n  onSubmit = formValues => {\r\n    this.props.createStream(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (<div>\r\n      <h3></h3>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n// helper function for validating formValues\r\nconst validate = formValues => {\r\n  const errors = {};\r\n\r\n  if (!formValues.title) {\r\n    // only run if the user didn't enter an title\r\n    errors.title = \"You must enter a title\";\r\n  }\r\n  if (!formValues.description) {\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n  return errors;\r\n};\r\n\r\n//wrapping form so you can hook up connect and reduxForm\r\nconst formWrapped = reduxForm({\r\n  form: \"streamCreate\",\r\n  validate\r\n})(StreamCreate);\r\n\r\nexport default connect(\r\n  null,\r\n  { createStream }\r\n)(formWrapped);\r\n"]},"metadata":{},"sourceType":"module"}